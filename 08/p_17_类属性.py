"""
    在python中，类是一个特殊的对象，叫类对象
    在程序运行时，类对象在内存中只会有一份，而对象的实例会有多份，类实例就是创建出来的对象实例

    类属性：
        是类特有的属性，其实就是java中的静态属性

    类方法:
        是类特有的方法，其实就是Java中的静态方法

     类属性和类方法都可以不需要创建实例，直接使用类名.属性名 或 类名.方法名来调用
"""


class Tool(object):
    num = 1
    """
        定义类属性，类属性不需要在 __init__方法中声明，直接在类中声明即可
    """


# 调用类属性，使用 类名.属性名
print(Tool.num)

# 其实也可以使用 对象实例.属性名来获取类属性，但这种方式不推荐
#  因为: 如果这个对象实例中也有和类属性相同的属性名，则返回的将会是实例的属性值
#        代码阅读性也不好，容易混淆
#         并且，使用 对象名.属性名 = value 时，会修改或添加对象的属性，而不会修改类的属性值

tool = Tool()
print(tool.num)
# tool.num = 99 # 不会修改类属性num的值，而是会为 tool这个实例添加一个num 属性

