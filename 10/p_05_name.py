"""
__name__ 属性
    在python 中，每个py文件都是一个独立的模块，
    原则上，每个文件都应该是可以被其它模块导入的
    在Py文件中，所有没有任何缩进的代码都会被执行一次

    而在实际开发中，每个模块都是独立开发的，大多有专人负责，
    而开发人员会在每个模块中添加一些测试代码，这些测试代码应该只在本模块中的测试使用，
    如果其它模块导入了，不应该执行这些测试代码

    使用 __name__ 属性可以每个模块中的测试代码只在测试时使用，在被其它模块导入时不执行

    __name__ 是python中的每个模块的内置属性，该属性的值是一个字符串
        如果在当前模块中执行，__name__ 属性的值总返回 __main__
        如果是被其它模块导入，__name__ 的值就是模块的名称

"""


# 本模块执行返回的结果总是 __main__
# 其它导入了此模块返回的结果是本模块名
# print(__name__)

# 测试代码 ，其它模块导入时也会被执行
# print("测试代码")


# 如果不想让上面的测试代码在其它模块中也执行，先注释上面的测试代码
# if "__main__" == __name__:
#     print("测试代码，只会在本模块中执行，其它导入了本模块不会执行")


#  在实际开发中，会将所有的测试代码放在一个main 方法中，然后使用 "__main__" == __name__ 来判断，
# 如下：
def main():
    #  所有测试代码放在此函数中...
    print("测试代码，只会在本模块中执行，其它导入了本模块不会执行")


#
if "__main__" == __name__:
    main()
